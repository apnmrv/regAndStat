security:

    encoders:
        Symfony\Component\Security\Core\User\User: bcrypt
        App\Entity\User:
          algorithm: bcrypt

    providers:
        in_memory:
          memory:
            users:
              admin:
                password: $2y$13$dbyozbVZFyb/2JTTnzL41einjTlzdzTTSfueIShs4xrqU/atwK35q
                roles: ['ROLE_ADMIN' , 'ROLE_USER']

        user_db:
          entity:
             class:    App\Entity\User
             property: username

        chain_provider:
            chain:
                providers: [ in_memory, user_db ]
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            anonymous: ~
            provider: chain_provider

            form_login:
            # https://symfony.com/doc/current/security/form_login_setup.html
                login_path: login
                check_path: login
                use_forward: false

                default_target_path: /
                always_use_default_target_path: false
                failure_path: /login

                username_parameter: _username
                password_parameter: _password

                post_only:      true
                remember_me:    false

            logout:
                path:   logout
                target: /
                invalidate_session: false
                delete_cookies:
                    a: { path: null, domain: null }
                    b: { path: null, domain: null }
#
#                use_forward: false
#
#                default_target_path: /
#                always_use_default_target_path: false
#                failure_path: /login
#
#                username_parameter: _username
#                password_parameter: _password
#
#                post_only:      true
#                remember_me:    false
#
#            logout:
#                path:   /logout
#                target: /
#                invalidate_session: false
#                delete_cookies:
#                    a: { path: null, domain: null }
#                    b: { path: null, domain: null }

    access_control:
        # require ROLE_ADMIN for /admin*
        - { path: ^/admin, roles: 'ROLE_ADMIN' }
        # require ROLE_USER for /eden*
        - { path: ^/eden, roles: ROLE_USER }

    role_hierarchy:
        ROLE_ADMIN: 'ROLE_USER'


#security:
#    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
#    encoders:
#        App\Entity\User:
#          algorithm: bcrypt
#        Symfony\Component\Security\Core\User\User: bcrypt
#
#    providers:
#        in_memory:
#          memory:
#            users:
#              admin:
#                password: $2y$13$dbyozbVZFyb/2JTTnzL41einjTlzdzTTSfueIShs4xrqU/atwK35q
#                roles:    [ROLE_ADMIN, ROLE_USER]
#
#        user_db:
#            entity:
#                class:    App\Entity\User
#                property: username
#
#
#        chain_provider:
#            chain:
#                providers: [ in_memory, user_db ]
#
#    firewalls:
#        dev:
#            pattern: ^/(_(profiler|wdt)|css|images|js)/
#            security: false
#
#        main:
#            pattern: ^/
#            anonymous: ~
#            provider: chain_provider
#
#            form_login:
#            # https://symfony.com/doc/current/security/form_login_setup.html
#                login_path: /login
#                check_path: /login_ckeck
#
#                use_forward: false
#
#                default_target_path: /
#                always_use_default_target_path: false
#                failure_path: /login
#
#                username_parameter: _username
#                password_parameter: _password
#
#                post_only:      true
#                remember_me:    false
#
#            logout:
#                path:   /logout
#                target: /
#                invalidate_session: false
#                delete_cookies:
#                    a: { path: null, domain: null }
#                    b: { path: null, domain: null }
#
#    # Easy way to control access for large sections of your site
#    # Note: Only the *first* access control that matches will be used
#    access_control:
##        # require ROLE_ADMIN for /admin*
#        - { path: ^/admin, roles: ROLE_ADMIN }
##        # require ROLE_USER for /eden*
#        - { path: ^/eden, roles: ROLE_USER }
#
##    role_hierarchy:
##        ROLE_ADMIN: ROLE_USER
#
#
#
#
